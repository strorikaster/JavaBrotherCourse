import java.util.Scanner;

public class main {
    public static void main(String[] args) {

        Scanner scan = new Scanner(System.in);
        System.out.println("Введите целое число");
        int num = scan.nextInt();

        System.out.println("Ваше число " + num);
        System.out.println("Ваше число двоичном представлении " + "\r\n" + getBinary(num)); // Добавил вызов метода getBinary, "\r\n" перенос на следущую строку

    }
    static String getBinary(int num) { // статический метод «getBinary», который получает целочисленный параметр «num» и возвращает строку
        StringBuilder str = new StringBuilder(); //создаём строковую переменную с помощью специального класса StringBuilder

        for (int i = 0; i <= 31; i++) { //цикл поправил у тебя (или у меня так было) i < 31 на i <= 31, иначе в начале печаталось только 7 нулей
            if ((num&1) == 1 ) { // если num и 1 = 1 то обновить num единицой, я бы так объяснил - при совпадении бита и числа, то получаем 1 и сравниваем с 1  и добавляем в переменную str 1
                str.append(1);
            }
            else if ((num&1) == 0) { // если num и 1 = 0 то обновить num нулём, если бит и число не совпадают, то будет 0 и получается если 0 равен 0, то в str 0.
                str.append(0);
            }
            if (i == 7 || i == 15|| i == 23) {
                str.append(" "); // добавление пробела, визуальное разбиение на байты
            }
            num >>= 1; //сдвиг, почему он тут? в задании он перед разбиением, но так не работает... ну потому что, ты завершил все операции с битом под номером ноль (i = 0) и сдвинулся к биту под номером 1, если сдвиг добавить раньше, то разбиение на байты будет некорректным
        }

        return str.reverse().toString(); // странный возврат значения, первый раз такой вижу, тут ваще похер - главное чтоб совпадало со значением в сигнатуре метода - static String getBinary(int num), тут у тебя возвращаемое значение должно быть String, но действия ты производишь со StringBuilder, поэтому используем метод toString, а метод reverse() используется для того, чтоб перевернуть строку задом наперед - зеркальное отображение как в задании

    }
}
